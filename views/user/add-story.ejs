<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>Add Story</title>
   <!-- Bootstrap CSS -->
   <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
   <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
   <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
   <link rel="preconnect" href="https://fonts.googleapis.com" />
   <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
   <link
     href="https://fonts.googleapis.com/css2?family=Abril+Fatface&family=Afacad:ital,wght@0,400..700;1,400..700&family=Anek+Latin:wght@100..800&family=Manrope:wght@200..800&family=Michroma&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap"
     rel="stylesheet"
   />
   <link
     rel="stylesheet"
     href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
     integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
     crossorigin="anonymous"
     referrerpolicy="no-referrer"
   />
   <link rel="stylesheet" href="/styles/add-story.css">
</head>
<body>
    <div class="background">
   <div class="story-container">
       <h2>Create New Story</h2>
       <form class="needs-validation"  enctype="multipart/form-data" novalidate onsubmit="detectSpamAndSubmit(event, '<%= user._id %>')">
           <div class="mb-3">
               <label for="title" class="form-label">Story Title*</label>
               <input 
                   type="text"
                   class="form-control"
                   id="title"
                   name="story[title]"
                   required
                   minlength="3"
                   maxlength="100"
                   placeholder="Enter Story Title"
               />
               <div class="invalid-feedback">
                   Please provide a story title (3-100 characters).
               </div>
           </div>

           <div class="mb-3">
               <label for="content" class="form-label">Content*</label>
               <textarea
                   class="form-control"
                   id="content"
                   name="story[content]"
                   rows="10"
                   required
                   minlength="10"
                   placeholder="Content"
               ></textarea>
               <div class="invalid-feedback">
                   Please provide story content (minimum 10 characters).
               </div>
           </div>

           <div class="mb-3">
            <label for="media" class="form-label"> Upload Image </label>       
            <input
              type="file"
              class="form-control"
              id="media"
              name="media"
              accept="image/*"
              required
            />
            <div class="invalid-feedback">
              Please upload an Image
            </div>
          </div>

           <!-- Hidden fields for author information -->
           <div hidden>
               <input 
                   type="hidden" 
                   name="story[contactInfo][name]" 
                   value="<%= user.name %>"
               />
               <input 
                   type="hidden" 
                   name="story[contactInfo][email]" 
                   value="<%= user.email %>"
               />
             
           </div>

           <button type="submit" class="butn">Publish Story</button>
       </form>
   </div>
</div>

   <!-- Bootstrap JS -->
   <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

   <!-- Form validation script -->
  <!-- <script src="../../public/js/script.js"></script> -->
   <script >
   (() => {
       'use strict';

       const forms = document.querySelectorAll('.needs-validation');

       Array.from(forms).forEach(form => {
           form.addEventListener('submit', event => {
               if (!form.checkValidity()) {
                   event.preventDefault();
                   event.stopPropagation();
               }
               form.classList.add('was-validated');
           });
       });
   })();

   // Spam detection

const detectSpamAndSubmit = async (event, userId) => {
    event.preventDefault(); // Prevent default form submission

    const formData = new FormData(event.target);
    const title = formData.get("story[title]");
    const content = formData.get("story[content]");

    try {
        const spamCheckResponse = await fetch("/check-spam", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ title, content }),
        });

        const spamCheckResult = await spamCheckResponse.json();
        console.log("Spam Check Response:", spamCheckResult);

        if (spamCheckResult.isSpam) {
            if (spamCheckResult.category === "SPAM") {
                alert("Your story appears to be spam. Please modify your content.");
            } else if (spamCheckResult.category === "GIBBERISH") {
                alert("Your story contains random or meaningless text. Please enter meaningful content.");
            }
            return; // Stop submission
        }

        console.log("Before submitting the actual story...");

        const response = await fetch(`/user/${userId}/story/add`, {
            method: "POST",
            body: formData // Send form data directly (includes file uploads)
        });
        if (response.redirected) {
            // If server sends a redirect, follow it
            window.location.href = response.url;
        } else if (response.ok) {
             // If manually redirecting
            window.location.href = `/user/${userId}/community`;
        } else {
            const result = await response.json();
            alert(`Error: ${result.error || "Failed to submit the story"}`);
        }

    } catch (error) {
        console.error("Error:", error);
        alert("Something went wrong. Please try again.");
    }
};
   

   </script>
</body>
</html>