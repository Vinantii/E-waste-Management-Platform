<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Apply for Waste Collection</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Abril+Fatface&family=Afacad:ital,wght@0,400..700;1,400..700&family=Anek+Latin:wght@100..800&family=Manrope:wght@200..800&family=Michroma&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
      integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link rel="stylesheet" href="/styles/user/apply-request.css">
  </head>
  <body>
    <div class="background">
      <div class="form-container">
        <h2 class="text-center mb-4">Apply for Waste Collection</h2>

        <form
          action="/user/<%= currentUser._id %>/apply-request"
          method="POST"
          class="needs-validation"
          enctype="multipart/form-data"
          novalidate
          data-agencies="<%= JSON.stringify(agencies) %>"
        >
          <!-- Waste Type Selection -->
          <div class="mb-3">
            <label for="wasteType" class="form-label">Waste Type</label> 
            <div class="waste-items">
              <div class="waste-item">
                <select name="request[wasteType][]" required>
                  <option value="">Select Waste Type</option>
                  <option value="mobile">Mobile</option>
                  <option value="phones">Phones</option>
                  <option value="computers">Computers</option>
                  <option value="laptop">Laptop</option>
                  <option value="Batteries">Batteries</option>
                </select>
                <input type="number" name="request[quantities][]" min="1" required placeholder="Quantity">
                <br>
                <input type="file" name="wasteImages[]" accept="image/*" class="form-control" onchange="classifyWasteImage(event)">
                <button type="button" class="remove-btn" onclick="removeWasteItem(this)">Remove</button><br>
              </div>
            </div>
            <button type="button" class="add-btn" onclick="addWasteItem()">Add Another Item</button>
          </div>
          <!-- Weight -->
          <div class="mb-3">
            <label for="weight" class="form-label">Weight (in kilos)</label>
            <input
              type="number"
              class="form-control"
              id="weight"
              name="request[weight]"
              required
            />
            <div class="invalid-feedback">Please enter a valid Weight.</div>
          </div>
          <!-- Pickup Address - Pre-filled from user profile -->
          <div class="mb-3">
            <label for="pickupAddress" class="form-label">Pickup Address</label>
            <textarea
              class="form-control"
              id="pickupAddress"
              name="request[pickupAddress]"
              rows="3"
              required
            >
<%= currentUser.address %></textarea
            >
            <div class="invalid-feedback">Please provide a pickup address.</div>
          </div>

          <!-- Contact Number - Pre-filled from user profile -->
          <div class="mb-3">
            <label for="contactNumber" class="form-label">Contact Number</label>
            <input
              type="tel"
              class="form-control"
              id="contactNumber"
              name="request[contactNumber]"
              pattern="\d{10}"
              required
              value="<%= currentUser.phone %>"
            />
            <div class="invalid-feedback">
              Please enter a valid 10-digit contact number.
            </div>
          </div>

          <!-- Pickup Date -->
          <div class="mb-3">
            <label for="pickupDate" class="form-label"
              >Preferred Pickup Date</label
            >
            <input
              type="date"
              class="form-control"
              id="pickupDate"
              name="request[pickupDate]"
              required
              min="<%= new Date().toISOString().split('T')[0] %>"
            />
            <div class="invalid-feedback">
              Please select a valid future date.
            </div>
          </div>
          <!-- Special Instructions -->
          <div class="mb-3">
            <label for="specialInstructions" class="form-label">
              Special Instructions (Optional)
            </label>
            <textarea
              class="form-control"
              id="specialInstructions"
              name="request[specialInstructions]"
              rows="3"
              maxlength="500"
            ></textarea>
            <div class="form-text">Maximum 500 characters.</div>
          </div>

          <!-- Select Agency -->
          <div class="mb-3">
            <label for="agency" class="form-label">Select Agency</label>
            <select class="form-select" id="agency" name="request[agency]" required>
              <option value="">Choose an agency...</option>
            </select>
          </div>

          <!-- Location Coordinates -->
          <div class="row mb-3" style="display: none;">
            <div class="col-md-6">
              <label for="longitude" class="form-label">Longitude</label>
              <input type="number" class="form-control" id="longitude" name="request[pickupLocation][coordinates][0]" step="any" required />
            </div>
            <div class="col-md-6" style="display: none;">
              <label for="latitude" class="form-label">Latitude</label>
              <input type="number" class="form-control" id="latitude" name="request[pickupLocation][coordinates][1]" step="any" required />
            </div>
          </div>

          <!-- Submit Button -->
          <div class="d-grid gap-2">
            <button type="submit" class="btn btn-primary">
              Submit Request
            </button>
            <a
              href="/user/<%= currentUser._id %>/dashboard"
              class="btn btn-secondary"
            >
              Cancel
            </a>
          </div>
        </form>
      </div>
  </div>

    <script>
      const agencySelect = document.getElementById("agency");
      const agencies = JSON.parse(document.querySelector("form").dataset.agencies);

      function updateAgencyOptions() {
        const wasteTypeSelects = document.querySelectorAll('select[name="request[wasteType][]"]');
        const selectedWasteTypes = Array.from(wasteTypeSelects).map(select => select.value).filter(value => value);

        agencySelect.disabled = selectedWasteTypes.length === 0;

        const matchingAgencies = agencies.filter(agency =>
          selectedWasteTypes.some(wasteType => agency.wasteTypesHandled.includes(wasteType))
        );

        agencySelect.innerHTML = '<option value="">Choose an agency...</option>';

        matchingAgencies.forEach(agency => {
          const option = document.createElement("option");
          option.value = agency._id;
          const handledTypes = selectedWasteTypes
            .filter(type => agency.wasteTypesHandled.includes(type))
            .join(", ");
          option.textContent = `${agency.name} (${agency.region}) - Handles: ${handledTypes}`;
          agencySelect.appendChild(option);
        });
      }

      document.querySelector('.waste-items').addEventListener('change', function(e) {
        if (e.target.matches('select[name="request[wasteType][]"]')) {
          updateAgencyOptions();
        }
      });

      function addWasteItem() {
        const container = document.querySelector('.waste-items');
        const newItem = document.querySelector('.waste-item').cloneNode(true);

        newItem.querySelector('select[name="request[wasteType][]"]').value = '';
        newItem.querySelector('input[name="request[quantities][]"]').value = '';
        newItem.querySelector('input[type="file"]').value = '';

        container.appendChild(newItem);
      }

      function removeWasteItem(button) {
        const wasteItems = document.querySelectorAll('.waste-item');
        if (wasteItems.length > 1) {
          button.parentElement.remove();
          updateAgencyOptions();
        }
      }

      async function classifyWasteImage(event) {
        console.log("inside classification");
        if (event.target.files.length === 0) return;

        const file = event.target.files[0];
        const formData = new FormData();
        formData.append("image", file);

        try {
          const response = await fetch("/classify-image", {
            method: "POST",
            body: formData,
          });

          const data = await response.json();
          if (data.category) {
            const wasteItem = event.target.closest(".waste-item");
            const wasteTypeSelect = wasteItem.querySelector('select[name="request[wasteType][]"]');

            if (wasteTypeSelect) {
              wasteTypeSelect.value = data.category.toLowerCase();
              updateAgencyOptions();
            }
          }
        } catch (error) {
          console.error("Error classifying image:", error);
        }
      }

      if ("geolocation" in navigator) {
        navigator.geolocation.getCurrentPosition(function (position) {
          document.getElementById("latitude").value = position.coords.latitude;
          document.getElementById("longitude").value = position.coords.longitude;
        });
      }
    </script>
  </body>
</html>
