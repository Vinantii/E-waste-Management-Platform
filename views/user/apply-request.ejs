<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Apply for Waste Collection</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <style>
      body {
        background-color: #f8f9fa;
      }
      .form-container {
        max-width: 800px;
        margin: 2rem auto;
        padding: 2rem;
        background: #fff;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="form-container">
        <h2 class="text-center mb-4">Apply for Waste Collection</h2>

        <form
          action="/user/<%= currentUser._id %>/apply-request"
          method="POST"
          class="needs-validation"
          enctype="multipart/form-data"
          novalidate
          data-agencies="<%= JSON.stringify(agencies) %>"
        >
          <!-- Waste Type Selection -->
          <div class="mb-3">
            <label for="wasteType" class="form-label">Waste Type</label>
            <select
              class="form-select"
              id="wasteType"
              name="request[wasteType][]"
              multiple
              required
            >
              <option value="mobile">Mobile Phones</option>
              <option value="laptop">Laptops</option>
              <option value="computers">Computers</option>
              <option value="Batteries">Batteries</option>
              <option value="phones">Other Phones</option>
            </select>
            <div class="invalid-feedback">
              Please select at least one waste type.
            </div>
          </div>

          <!-- Quantity -->
          <div class="mb-3">
            <label for="quantity" class="form-label"
              >Quantity (number of items)</label
            >
            <input
              type="number"
              class="form-control"
              id="quantity"
              name="request[quantity]"
              min="1"
              required
            />
            <div class="invalid-feedback">
              Please enter a valid quantity (minimum 1).
            </div>
          </div>

          <!-- Weight -->

          <div class="mb-3">
            <label for="weight" class="form-label">Weight (in kilos)</label>
            <input
              type="number"
              class="form-control"
              id="weight"
              name="request[weight]"
              required
            />
            <div class="invalid-feedback">Please enter a valid Weight.</div>
          </div>

          <!-- Pickup Address - Pre-filled from user profile -->
          <div class="mb-3">
            <label for="pickupAddress" class="form-label">Pickup Address</label>
            <textarea
              class="form-control"
              id="pickupAddress"
              name="request[pickupAddress]"
              rows="3"
              required
            >
<%= currentUser.address %></textarea
            >
            <div class="invalid-feedback">Please provide a pickup address.</div>
          </div>

          <!-- Contact Number - Pre-filled from user profile -->
          <div class="mb-3">
            <label for="contactNumber" class="form-label">Contact Number</label>
            <input
              type="tel"
              class="form-control"
              id="contactNumber"
              name="request[contactNumber]"
              pattern="\d{10}"
              required
              value="<%= currentUser.phone %>"
            />
            <div class="invalid-feedback">
              Please enter a valid 10-digit contact number.
            </div>
          </div>

          <!-- Pickup Date -->
          <div class="mb-3">
            <label for="pickupDate" class="form-label"
              >Preferred Pickup Date</label
            >
            <input
              type="date"
              class="form-control"
              id="pickupDate"
              name="request[pickupDate]"
              required
              min="<%= new Date().toISOString().split('T')[0] %>"
            />
            <div class="invalid-feedback">
              Please select a valid future date.
            </div>
          </div>

          <!-- Location Coordinates -->
          <div class="row mb-3">
            <div class="col-md-6">
              <label for="longitude" class="form-label">Longitude</label>
              <input
                type="number"
                class="form-control"
                id="longitude"
                name="request[pickupLocation][coordinates][0]"
                step="any"
                required
              />
              <div class="invalid-feedback">Please enter longitude.</div>
            </div>
            <div class="col-md-6">
              <label for="latitude" class="form-label">Latitude</label>
              <input
                type="number"
                class="form-control"
                id="latitude"
                name="request[pickupLocation][coordinates][1]"
                step="any"
                required
              />
              <div class="invalid-feedback">Please enter latitude.</div>
            </div>
          </div>

          <!-- Special Instructions -->
          <div class="mb-3">
            <label for="specialInstructions" class="form-label">
              Special Instructions (Optional)
            </label>
            <textarea
              class="form-control"
              id="specialInstructions"
              name="request[specialInstructions]"
              rows="3"
              maxlength="500"
            ></textarea>
            <div class="form-text">Maximum 500 characters.</div>
          </div>

          <!-- Add this after the waste type selection -->
          <div class="mb-3">
            <label for="agency" class="form-label">Select Agency</label>
            <select
              class="form-select"
              id="agency"
              name="request[agency]"
              required
              disabled
            >
              <option value="">Choose an agency...</option>
            </select>
            <div class="invalid-feedback">Please select an agency.</div>
          </div>

          <!-- Change the file input to accept multiple images -->
          <div class="mb-3">
            <label for="wasteImages" class="form-label"
              >Upload Waste Images</label
            >
            <input
              type="file"
              class="form-control"
              id="wasteImages"
              name="wasteImages"
              accept="image/*"
              multiple
              required
            />
            <div class="invalid-feedback">
              Please upload at least one image of the e-waste.
            </div>
            <div class="form-text">
              Upload clear images of the e-waste items. You can select multiple
              images.
            </div>
          </div>

          <!-- Submit Button -->
          <div class="d-grid gap-2">
            <button type="submit" class="btn btn-primary">
              Submit Request
            </button>
            <a
              href="/user/<%= currentUser._id %>/dashboard"
              class="btn btn-secondary"
            >
              Cancel
            </a>
          </div>
        </form>
      </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>

    <!-- Custom validation script -->
    <script src="/js/script.js"></script>

    <!-- Optional: Add geolocation script -->
    <script>
      // Get current location if available
      if ("geolocation" in navigator) {
        navigator.geolocation.getCurrentPosition(function (position) {
          document.getElementById("latitude").value = position.coords.latitude;
          document.getElementById("longitude").value =
            position.coords.longitude;
        });
      }

      // Prevent selecting past dates
      const pickupDateInput = document.getElementById("pickupDate");
      const today = new Date().toISOString().split("T")[0];
      pickupDateInput.setAttribute("min", today);
    </script>

    <!-- Add this script before the closing body tag -->
    <script>
      // Get references to the select elements
      const wasteTypeSelect = document.getElementById("wasteType");
      const agencySelect = document.getElementById("agency");

      // Get agencies data from form's data attribute
      const agencies = JSON.parse(
        document.querySelector("form").dataset.agencies
      );

      wasteTypeSelect.addEventListener("change", function () {
        // Get selected waste types
        const selectedWasteTypes = Array.from(this.selectedOptions).map(
          (option) => option.value
        );

        // Filter agencies that handle ANY of the selected waste types
        const matchingAgencies = agencies.filter((agency) =>
          selectedWasteTypes.some((wasteType) =>
            agency.wasteTypesHandled.includes(wasteType)
          )
        );

        // Enable/disable agency select based on matches
        agencySelect.disabled = selectedWasteTypes.length === 0;

        // Clear existing options
        agencySelect.innerHTML =
          '<option value="">Choose an agency...</option>';

        // Add matching agencies to select
        matchingAgencies.forEach((agency) => {
          const option = document.createElement("option");
          option.value = agency._id;
          // Show which waste types this agency handles from the selected types
          const handledTypes = selectedWasteTypes
            .filter((type) => agency.wasteTypesHandled.includes(type))
            .join(", ");
          option.textContent = `${agency.name} (${agency.region}) - Handles: ${handledTypes}`;
          agencySelect.appendChild(option);
        });
      });
    </script>
  </body>
</html>
